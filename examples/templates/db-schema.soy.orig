{namespace db autoescape="contextual"}


/**
 * @param options
 * @param messages
 */
{template .proto}
  "use strict";{\n}
  var schema = {lb}{rb};{\n}

  {foreach $message in $messages}
    {call .message}
      {param message: $message /}
      {param protoOptions: $options /}
    {/call}
  {/foreach}
{/template}


/**
 * @param message
 * @param protoOptions
 */
{template .message}
  {\n}{\n}
  var {$message.name} = schema.{$message.name} = function {$message.name}() {lb}{rb}{\n}
  {$message.name}.table = '{$protoOptions.db_table}'{\n}
  {$message.name}.schema = {lb}{\n}
    {foreach $field in $message.fields}
      {sp}{sp}
      {call .field}
        {param field: $field /}
        {param messageOptions: $message.options /}
      {/call}
      {if not isLast($field)},{/if}
      {\n}
    {/foreach}
  {rb}{\n}
{/template}


/**
 * @param field
 * @param messageOptions
 */
{template .field}
<<<<<<< HEAD
  {$field.name} = {lb}
=======
  {$field.name}: {lb}
>>>>>>> Use soynode for codegen
    {if $messageOptions.hash_key == $field.name}
      type: 'hashKey'
    {else}
      type: {$field.type}
    {/if}
  {rb}
{/template}
