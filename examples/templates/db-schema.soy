{namespace db autoescape="contextual"}


/**
 * @param options
 * @param messages
 */
{template .proto}
{literal}
// Copyright 2013 The Obvious Corporation.
// This file is generated please do not edit directly

{/literal}

  "use strict";{\n}
  var schema = {lb}{rb};{\n}

  {foreach $message in $messages}
    {call .message}
      {param message: $message /}
      {param protoOptions: $options /}
    {/call}
  {/foreach}
  {\n}
  {\n}
  module.exports = function (graph) {lb}{\n}
  {sp}{sp}return schema{\n}
  {rb}{\n}
{/template}


/**
 * @param message
 * @param protoOptions
 */
{template .message}
  {\n}{\n}
  var {$message.name} = schema.{$message.name} = function {$message.name}() {lb}{rb}{\n}
  {$message.name}.table = '{$protoOptions.db_table}'{\n}
  {$message.name}.schema = {lb}{\n}
    {sp}{sp}column: {lb}type: 'rangeKey', pattern: '{$message.options.range_key}'{rb}
    {foreach $field in $message.fields}
      ,{\n}
      {sp}{sp}
      {call .field}
        {param field: $field /}
        {param messageOptions: $message.options /}
      {/call}
    {/foreach}
  {\n}
  {rb}
  {\n}
{/template}


/**
 * @param field
 * @param messageOptions
 */
{template .field}
  {$field.name}: {lb}
    {if $messageOptions.hash_key == $field.rawName}
      type: 'hashKey'
    {elseif $field.options.js_type}
      type: {$field.options.js_type}
    {else}
      type:{sp}
      {switch $field.type}
        {case 'number'}Number
        {case 'boolean'}Boolean
        {case 'string'}String
        {default}{$field.type}
      {/switch}
    {/if}
    {if $field.options.default}
    , 'default':{sp}
      {if $field.type == 'number' or $field.type == 'boolean'}
        {$field.options.default}
      {else}
        '{$field.options.default}'
      {/if}
    {/if}
  {rb}
{/template}

